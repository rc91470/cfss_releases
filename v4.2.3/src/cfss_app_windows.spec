# -*- mode: python ; coding: utf-8 -*-
# CFSS Windows PyInstaller Specification
# This file configures how PyInstaller builds the Windows executable

import os
import sys
from pathlib import Path

# Get the current directory
current_dir = Path.cwd()

# Define data files to include
data_files = [
    (str(current_dir / 'data'), 'data'),
    (str(current_dir / 'sounds'), 'sounds'),
]

# Define hidden imports (modules that PyInstaller might miss)
hidden_imports = [
    'tkinter',
    'tkinter.ttk',
    'customtkinter',
    'pygame',
    'pygame.mixer',
    'sqlite3',
    'pandas',
    'openpyxl',
    'requests',
    'json',
    'csv',
    'datetime',
    'threading',
    'queue',
    'hashlib',
    'os',
    'sys',
    'pathlib',
    'shutil',
    'subprocess',
    'logging',
    'configparser',
    'urllib.parse',
    'urllib.request',
    'urllib.error',
    'http.client',
    'ssl',
    'base64',
    'time',
    'platform',
    'socket',
    'webbrowser',
    'tempfile',
    'glob',
    'fnmatch',
    'mimetypes',
    'email.mime.text',
    'email.mime.multipart',
    'email.mime.base',
    'email.encoders',
    'smtplib',
    'imaplib',
    'poplib',
    'ftplib',
    'zipfile',
    'tarfile',
    'gzip',
    'bz2',
    'lzma',
    'zlib',
    'binascii',
    'struct',
    'array',
    'collections',
    'itertools',
    'functools',
    'operator',
    'math',
    'random',
    'statistics',
    'decimal',
    'fractions',
    'cmath',
    'numbers',
    'pickle',
    'copyreg',
    'copy',
    'pprint',
    'reprlib',
    'enum',
    'types',
    'weakref',
    'gc',
    'inspect',
    'site',
    'importlib',
    'pkgutil',
    'modulefinder',
    'runpy',
    'argparse',
    'getopt',
    'getpass',
    'curses',
    'curses.textpad',
    'curses.ascii',
    'curses.panel',
    'platform',
    'errno',
    'ctypes',
    'ctypes.util',
    'ctypes.wintypes',
    'msvcrt',
    'winreg',
    'winsound',
    'locale',
    'calendar',
    'collections.abc',
    'heapq',
    'bisect',
    'weakref',
    'types',
    'copy',
    'pickle',
    'shelve',
    'marshal',
    'dbm',
    'sqlite3',
    'zlib',
    'gzip',
    'bz2',
    'lzma',
    'zipfile',
    'tarfile',
    'csv',
    'configparser',
    'netrc',
    'xdrlib',
    'plistlib',
    'hashlib',
    'hmac',
    'secrets',
    'os',
    'io',
    'time',
    'argparse',
    'getopt',
    'logging',
    'logging.config',
    'logging.handlers',
    'getpass',
    'curses',
    'platform',
    'errno',
    'ctypes',
    'threading',
    'multiprocessing',
    'concurrent.futures',
    'subprocess',
    'sched',
    'queue',
    'dummy_threading',
    'dummy_thread',
    'contextvars',
    'asyncio',
    'socket',
    'ssl',
    'select',
    'selectors',
    'asyncore',
    'asynchat',
    'signal',
    'mmap',
    'email',
    'json',
    'mailcap',
    'mailbox',
    'mimetypes',
    'base64',
    'binascii',
    'binhex',
    'quopri',
    'uu',
    'html',
    'html.parser',
    'html.entities',
    'xml',
    'xml.etree.ElementTree',
    'xml.dom',
    'xml.dom.minidom',
    'xml.dom.pulldom',
    'xml.sax',
    'xml.sax.handler',
    'xml.sax.saxutils',
    'xml.sax.xmlreader',
    'xml.parsers.expat',
    'webbrowser',
    'cgi',
    'cgitb',
    'wsgiref',
    'urllib',
    'urllib.request',
    'urllib.response',
    'urllib.parse',
    'urllib.error',
    'http',
    'http.client',
    'ftplib',
    'poplib',
    'imaplib',
    'nntplib',
    'smtplib',
    'smtpd',
    'telnetlib',
    'uuid',
    'socketserver',
    'http.server',
    'http.cookies',
    'http.cookiejar',
    'xmlrpc',
    'xmlrpc.client',
    'xmlrpc.server',
    'ipaddress',
    'audioop',
    'aifc',
    'sunau',
    'wave',
    'chunk',
    'colorsys',
    'imghdr',
    'sndhdr',
    'ossaudiodev',
    'gettext',
    'locale',
    'turtle',
    'cmd',
    'shlex',
    'tkinter',
    'tkinter.colorchooser',
    'tkinter.commondialog',
    'tkinter.filedialog',
    'tkinter.font',
    'tkinter.messagebox',
    'tkinter.scrolledtext',
    'tkinter.simpledialog',
    'tkinter.tix',
    'tkinter.ttk',
    'tkinter.constants',
    'tkinter.dnd',
    'tkinter.tkconstants',
    'tkinter.tkdnd',
    'typing',
    'typing_extensions',
    'pydoc',
    'doctest',
    'unittest',
    'unittest.mock',
    'test',
    'test.support',
    'bdb',
    'faulthandler',
    'pdb',
    'profile',
    'pstats',
    'timeit',
    'trace',
    'tracemalloc',
    'distutils',
    'distutils.util',
    'distutils.archive_util',
    'distutils.dep_util',
    'distutils.dir_util',
    'distutils.file_util',
    'distutils.spawn',
    'distutils.sysconfig',
    'distutils.text_file',
    'distutils.version',
    'ensurepip',
    'venv',
    'zipapp',
    'sys',
    'sysconfig',
    'builtins',
    'warnings',
    'dataclasses',
    'contextlib',
    'abc',
    'atexit',
    'traceback',
    'future_builtins',
    'imp',
    'zipimport',
    'pkgutil',
    'modulefinder',
    'runpy',
    'importlib',
    'importlib.util',
    'importlib.machinery',
    'importlib.abc',
    'importlib.resources',
    'parser',
    'ast',
    'symtable',
    'symbol',
    'token',
    'keyword',
    'tokenize',
    'tabnanny',
    'pyclbr',
    'py_compile',
    'compileall',
    'dis',
    'pickletools',
    'formatter',
    'msilib',
    'msvcrt',
    'winreg',
    'winsound',
]

# Analysis configuration
a = Analysis(
    ['cfss_app.py'],
    pathex=[str(current_dir)],
    binaries=[],
    datas=data_files,
    hiddenimports=hidden_imports,
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=None,
    noarchive=False,
)

# Remove duplicate files
pyz = PYZ(a.pure, a.zipped_data, cipher=None)

# Create the executable
exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='CFSS',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,  # Set to False for windowed app, True for console app
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon='icon.ico' if os.path.exists('icon.ico') else None,
)

# Note: Windows doesn't need a separate app bundle like macOS
# The executable is created directly as CFSS.exe
